function e(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var t,i;"function"==typeof SuppressedError&&SuppressedError;var r=e(i?t:(i=1,t=function e(t,i){if(t===i)return!0;if(t&&i&&"object"==typeof t&&"object"==typeof i){if(t.constructor!==i.constructor)return!1;var r,s,o;if(Array.isArray(t)){if((r=t.length)!=i.length)return!1;for(s=r;0!==s--;)if(!e(t[s],i[s]))return!1;return!0}if(t.constructor===RegExp)return t.source===i.source&&t.flags===i.flags;if(t.valueOf!==Object.prototype.valueOf)return t.valueOf()===i.valueOf();if(t.toString!==Object.prototype.toString)return t.toString()===i.toString();if((r=(o=Object.keys(t)).length)!==Object.keys(i).length)return!1;for(s=r;0!==s--;)if(!Object.prototype.hasOwnProperty.call(i,o[s]))return!1;for(s=r;0!==s--;){var n=o[s];if(!e(t[n],i[n]))return!1}return!0}return t!=t&&i!=i}));const s="__googleMapsScriptId";var o,n;(n=o||(o={}))[n.INITIALIZED=0]="INITIALIZED",n[n.LOADING=1]="LOADING",n[n.SUCCESS=2]="SUCCESS",n[n.FAILURE=3]="FAILURE";class a{constructor({apiKey:e,authReferrerPolicy:t,channel:i,client:o,id:n=s,language:l,libraries:h=[],mapIds:c,nonce:d,region:u,retries:g=3,url:p="https://maps.googleapis.com/maps/api/js",version:f}){if(this.callbacks=[],this.done=!1,this.loading=!1,this.errors=[],this.apiKey=e,this.authReferrerPolicy=t,this.channel=i,this.client=o,this.id=n||s,this.language=l,this.libraries=h,this.mapIds=c,this.nonce=d,this.region=u,this.retries=g,this.url=p,this.version=f,a.instance){if(!r(this.options,a.instance.options))throw new Error(`Loader must not be called again with different options. ${JSON.stringify(this.options)} !== ${JSON.stringify(a.instance.options)}`);return a.instance}a.instance=this}get options(){return{version:this.version,apiKey:this.apiKey,channel:this.channel,client:this.client,id:this.id,libraries:this.libraries,language:this.language,region:this.region,mapIds:this.mapIds,nonce:this.nonce,url:this.url,authReferrerPolicy:this.authReferrerPolicy}}get status(){return this.errors.length?o.FAILURE:this.done?o.SUCCESS:this.loading?o.LOADING:o.INITIALIZED}get failed(){return this.done&&!this.loading&&this.errors.length>=this.retries+1}createUrl(){let e=this.url;return e+="?callback=__googleMapsCallback&loading=async",this.apiKey&&(e+=`&key=${this.apiKey}`),this.channel&&(e+=`&channel=${this.channel}`),this.client&&(e+=`&client=${this.client}`),this.libraries.length>0&&(e+=`&libraries=${this.libraries.join(",")}`),this.language&&(e+=`&language=${this.language}`),this.region&&(e+=`&region=${this.region}`),this.version&&(e+=`&v=${this.version}`),this.mapIds&&(e+=`&map_ids=${this.mapIds.join(",")}`),this.authReferrerPolicy&&(e+=`&auth_referrer_policy=${this.authReferrerPolicy}`),e}deleteScript(){const e=document.getElementById(this.id);e&&e.remove()}load(){return this.loadPromise()}loadPromise(){return new Promise((e,t)=>{this.loadCallback(i=>{i?t(i.error):e(window.google)})})}importLibrary(e){return this.execute(),google.maps.importLibrary(e)}loadCallback(e){this.callbacks.push(e),this.execute()}setScript(){var e,t;if(document.getElementById(this.id))return void this.callback();const i={key:this.apiKey,channel:this.channel,client:this.client,libraries:this.libraries.length&&this.libraries,v:this.version,mapIds:this.mapIds,language:this.language,region:this.region,authReferrerPolicy:this.authReferrerPolicy};Object.keys(i).forEach(e=>!i[e]&&delete i[e]),(null===(t=null===(e=null===window||void 0===window?void 0:window.google)||void 0===e?void 0:e.maps)||void 0===t?void 0:t.importLibrary)||(e=>{let t,i,r,s="The Google Maps JavaScript API",o="google",n="importLibrary",a="__ib__",l=document,h=window;h=h[o]||(h[o]={});const c=h.maps||(h.maps={}),d=new Set,u=new URLSearchParams,g=()=>t||(t=new Promise((n,h)=>{return g=this,f=function*(){var g;for(r in yield i=l.createElement("script"),i.id=this.id,u.set("libraries",[...d]+""),e)u.set(r.replace(/[A-Z]/g,e=>"_"+e[0].toLowerCase()),e[r]);u.set("callback",o+".maps."+a),i.src=this.url+"?"+u,c[a]=n,i.onerror=()=>t=h(Error(s+" could not load.")),i.nonce=this.nonce||(null===(g=l.querySelector("script[nonce]"))||void 0===g?void 0:g.nonce)||"",l.head.append(i)},new((p=void 0)||(p=Promise))(function(e,t){function i(e){try{s(f.next(e))}catch(u){t(u)}}function r(e){try{s(f.throw(e))}catch(u){t(u)}}function s(t){var s;t.done?e(t.value):(s=t.value,s instanceof p?s:new p(function(e){e(s)})).then(i,r)}s((f=f.apply(g,[])).next())});var g,p,f}));c[n]?console.warn(s+" only loads once. Ignoring:",e):c[n]=(e,...t)=>d.add(e)&&g().then(()=>c[n](e,...t))})(i);const r=this.libraries.map(e=>this.importLibrary(e));r.length||r.push(this.importLibrary("core")),Promise.all(r).then(()=>this.callback(),e=>{const t=new ErrorEvent("error",{error:e});this.loadErrorCallback(t)})}reset(){this.deleteScript(),this.done=!1,this.loading=!1,this.errors=[],this.onerrorEvent=null}resetIfRetryingFailed(){this.failed&&this.reset()}loadErrorCallback(e){if(this.errors.push(e),this.errors.length<=this.retries){const e=this.errors.length*Math.pow(2,this.errors.length);console.error(`Failed to load Google Maps script, retrying in ${e} ms.`),setTimeout(()=>{this.deleteScript(),this.setScript()},e)}else this.onerrorEvent=e,this.callback()}callback(){this.done=!0,this.loading=!1,this.callbacks.forEach(e=>{e(this.onerrorEvent)}),this.callbacks=[]}execute(){if(this.resetIfRetryingFailed(),!this.loading)if(this.done)this.callback();else{if(window.google&&window.google.maps&&window.google.maps.version)return console.warn("Google Maps already loaded outside @googlemaps/js-api-loader. This may result in undesirable behavior as options and script parameters may not match."),void this.callback();this.loading=!0,this.setScript()}}}export{s as DEFAULT_ID,a as Loader,o as LoaderStatus};
